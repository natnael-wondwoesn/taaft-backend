# Redirect HTTP to HTTPS for aibyhour.com
server {
    listen 80;
    server_name aibyhour.com;
    return 301 https://$host$request_uri;
}

# Redirect HTTP to HTTPS for www.aibyhour.com
server {
    listen 80;
    server_name www.aibyhour.com;
    return 301 https://$host$request_uri;
}

# HTTPS configuration for aibyhour.com
server {
    listen 443 ssl;
    server_name aibyhour.com;

    ssl_certificate /etc/letsencrypt/live/aibyhour.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/aibyhour.com/privkey.pem;

    # Placeholder response for root
    location / {
        return 200 "Temporary placeholder for certbot";
        add_header Content-Type text/plain;
    }

    # Proxy API requests to backend
    location /api/ {
        proxy_pass http://127.0.0.1:8001/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # ⚠️ Do not add any CORS headers here
    }
}

# HTTPS configuration for www.aibyhour.com
server {
    listen 443 ssl;
    server_name www.aibyhour.com;

    ssl_certificate /etc/letsencrypt/live/aibyhour.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/aibyhour.com/privkey.pem;

    # Placeholder response for root
    location / {
        return 200 "Temporary placeholder for certbot";
        add_header Content-Type text/plain;
    }

    # Proxy API requests to backend
    location /api/ {
        proxy_pass http://127.0.0.1:8001/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # ⚠️ Do not add any CORS headers here
    }
}
